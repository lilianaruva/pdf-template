{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _fns = require(\"@react-pdf/fns\");\n\nvar _standardFont = _interopRequireDefault(require(\"./standardFont\"));\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\n\nvar getFontSize = function getFontSize(node) {\n  return node.attributes.fontSize || 12;\n};\n\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new _standardFont.default(name);\n  fontCache[name] = font;\n  return font;\n};\n\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\n\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\n\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n        runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n\n      var chars = string.slice(run.start, run.end);\n\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont); // If the default font does not have a glyph and the fallback font does, we use it\n\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run); // If anything that would impact res has changed, update it\n\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n\n        index += char.length;\n      }\n    }\n\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize((0, _fns.last)(runs));\n\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar _default = fontSubstitution;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_fns","_standardFont","fontCache","IGNORED_CODE_POINTS","getFontSize","node","attributes","fontSize","getOrCreateFont","name","font","getFallbackFont","shouldFallbackToFont","codePoint","includes","hasGlyphForCodePoint","fontSubstitution","_ref","string","runs","lastFont","lastFontSize","lastIndex","index","res","i","length","run","defaultFont","push","start","end","chars","slice","j","char","codePointAt","shouldFallback","unitsPerEm","scale","_fontSize","last","_default"],"sources":["C:/Users/lilyg/OneDrive/Documentos/TRABAJO/pppcalc/k81v6q/node_modules/@react-pdf/layout/lib/text/fontSubstitution.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _fns = require(\"@react-pdf/fns\");\n\nvar _standardFont = _interopRequireDefault(require(\"./standardFont\"));\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\n\nvar getFontSize = function getFontSize(node) {\n  return node.attributes.fontSize || 12;\n};\n\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new _standardFont.default(name);\n  fontCache[name] = font;\n  return font;\n};\n\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\n\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\n\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n        runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n\n      var chars = string.slice(run.start, run.end);\n\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont); // If the default font does not have a glyph and the fallback font does, we use it\n\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run); // If anything that would impact res has changed, update it\n\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n\n        index += char.length;\n      }\n    }\n\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize((0, _fns.last)(runs));\n\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar _default = fontSubstitution;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}