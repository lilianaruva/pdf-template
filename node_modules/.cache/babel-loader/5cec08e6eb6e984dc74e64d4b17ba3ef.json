{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0; // TODO: Implement using only matrices to support skew and even more operations than css.\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n            scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var x = value[0],\n            y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _default = applyTransformations;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","applySingleTransformation","ctx","transform","origin","operation","value","scaleX","scaleY","scale","angle","rotate","x","y","translate","apply","console","error","applyTransformations","node","_node$style","_node$props","left","top","operations","style","props","forEach","_default"],"sources":["C:/Users/lilyg/OneDrive/Documentos/TRABAJO/pppcalc/k81v6q/node_modules/@react-pdf/render/lib/operations/transform.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n            scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var x = value[0],\n            y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _default = applyTransformations;\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB,C,CAEA;;AACA,IAAIC,yBAAyB,GAAG,SAASA,yBAAT,CAAmCC,GAAnC,EAAwCC,SAAxC,EAAmDC,MAAnD,EAA2D;EACzF,IAAIC,SAAS,GAAGF,SAAS,CAACE,SAA1B;EAAA,IACIC,KAAK,GAAGH,SAAS,CAACG,KADtB;;EAGA,QAAQD,SAAR;IACE,KAAK,OAAL;MACE;QACE,IAAIE,MAAM,GAAGD,KAAK,CAAC,CAAD,CAAlB;QAAA,IACIE,MAAM,GAAGF,KAAK,CAAC,CAAD,CADlB;QAEAJ,GAAG,CAACO,KAAJ,CAAUF,MAAV,EAAkBC,MAAlB,EAA0B;UACxBJ,MAAM,EAAEA;QADgB,CAA1B;QAGA;MACD;;IAEH,KAAK,QAAL;MACE;QACE,IAAIM,KAAK,GAAGJ,KAAK,CAAC,CAAD,CAAjB;QACAJ,GAAG,CAACS,MAAJ,CAAWD,KAAX,EAAkB;UAChBN,MAAM,EAAEA;QADQ,CAAlB;QAGA;MACD;;IAEH,KAAK,WAAL;MACE;QACE,IAAIQ,CAAC,GAAGN,KAAK,CAAC,CAAD,CAAb;QAAA,IACIO,CAAC,GAAGP,KAAK,CAAC,CAAD,CADb;QAEAJ,GAAG,CAACY,SAAJ,CAAcF,CAAd,EAAiBC,CAAjB,EAAoB;UAClBT,MAAM,EAAEA;QADU,CAApB;QAGA;MACD;;IAEH,KAAK,QAAL;MACE;QACEF,GAAG,CAACC,SAAJ,CAAcY,KAAd,CAAoBb,GAApB,EAAyBI,KAAzB;QACA;MACD;;IAEH;MACE;QACEU,OAAO,CAACC,KAAR,CAAc,2BAA2BZ,SAA3B,GAAuC,qBAArD;MACD;EAvCL;AAyCD,CA7CD;;AA+CA,IAAIa,oBAAoB,GAAG,SAASA,oBAAT,CAA8BhB,GAA9B,EAAmCiB,IAAnC,EAAyC;EAClE,IAAIC,WAAJ,EAAiBC,WAAjB;;EAEA,IAAI,CAACF,IAAI,CAACf,MAAV,EAAkB;EAClB,IAAIA,MAAM,GAAG,CAACe,IAAI,CAACf,MAAL,CAAYkB,IAAb,EAAmBH,IAAI,CAACf,MAAL,CAAYmB,GAA/B,CAAb;EACA,IAAIC,UAAU,GAAG,CAAC,CAACJ,WAAW,GAAGD,IAAI,CAACM,KAApB,MAA+B,IAA/B,IAAuCL,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,WAAW,CAACjB,SAAtF,MAAqG,CAACkB,WAAW,GAAGF,IAAI,CAACO,KAApB,MAA+B,IAA/B,IAAuCL,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,WAAW,CAAClB,SAA1L,KAAwM,EAAzN;EACAqB,UAAU,CAACG,OAAX,CAAmB,UAAUtB,SAAV,EAAqB;IACtCJ,yBAAyB,CAACC,GAAD,EAAMG,SAAN,EAAiBD,MAAjB,CAAzB;EACD,CAFD;AAGD,CATD;;AAWA,IAAIwB,QAAQ,GAAGV,oBAAf;AACApB,OAAO,CAACE,OAAR,GAAkB4B,QAAlB"},"metadata":{},"sourceType":"script"}