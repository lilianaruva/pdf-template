{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _fns = require(\"@react-pdf/fns\");\n/* eslint-disable no-unused-expressions */\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n\n      if (!(0, _fns.isNil)(value) && yogaNode) {\n        var hasEdge = !(0, _fns.isNil)(edge);\n        var fixedMethod = \"set\" + (0, _fns.upperFirst)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _fns.matchPercent)(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n\nvar _default = setYogaValue;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_yoga","_fns","setYogaValue","attr","edge","value","node","yogaNode","_yogaNode","isNil","hasEdge","fixedMethod","upperFirst","autoMethod","percentMethod","percent","matchPercent","Error","_yogaNode$percentMeth","call","_yogaNode$percentMeth2","_yogaNode$autoMethod","setFlexBasis","UNIT_AUTO","_yogaNode$autoMethod2","_yogaNode$fixedMethod","_yogaNode$fixedMethod2","_default"],"sources":["C:/Users/lilyg/OneDrive/Documentos/TRABAJO/pppcalc/k81v6q/node_modules/@react-pdf/layout/lib/node/setYogaValue.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _fns = require(\"@react-pdf/fns\");\n\n/* eslint-disable no-unused-expressions */\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n\n      if (!(0, _fns.isNil)(value) && yogaNode) {\n        var hasEdge = !(0, _fns.isNil)(edge);\n        var fixedMethod = \"set\" + (0, _fns.upperFirst)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _fns.matchPercent)(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n\nvar _default = setYogaValue;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}