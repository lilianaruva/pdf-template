{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n/* eslint-disable no-param-reassign */\n\n\nvar SAFETY_HEIGHT = 10;\n\nvar getMax = function getMax(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = function moveTo() {\n    addPoint.apply(void 0, arguments);\n    return ctx;\n  };\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return ctx;\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return getMax(points.map(function (p) {\n      return p[0];\n    }));\n  };\n\n  ctx.getHeight = function () {\n    return getMax(points.map(function (p) {\n      return p[1];\n    }));\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  return function () {\n    var imageMargin = (0, _getMargin.default)(node);\n    var pagePadding = (0, _getPadding.default)(page);\n    var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n    var ctx = measureCtx();\n    node.props.paint(ctx);\n    var width = ctx.getWidth();\n    var height = Math.min(pageArea, ctx.getHeight());\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n\nvar _default = measureCanvas;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_getMargin","_getPadding","_isHeightAuto","SAFETY_HEIGHT","getMax","values","Math","max","apply","Infinity","concat","measureCtx","ctx","points","nil","addPoint","x","y","push","moveTo","arguments","rect","w","h","ellipse","rx","ry","polygon","lineTo","circle","roundedRect","text","path","lineWidth","bezierCurveTo","quadraticCurveTo","scale","rotate","translate","dash","clip","save","fill","font","stroke","lineCap","opacity","restore","lineJoin","fontSize","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","map","p","getHeight","measureCanvas","page","node","imageMargin","pagePadding","pageArea","box","height","paddingTop","paddingBottom","marginTop","marginBottom","props","paint","width","min","_default"],"sources":["C:/Users/lilyg/OneDrive/Documentos/TRABAJO/pppcalc/k81v6q/node_modules/@react-pdf/layout/lib/canvas/measureCanvas.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\n/* eslint-disable no-param-reassign */\nvar SAFETY_HEIGHT = 10;\n\nvar getMax = function getMax(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = function moveTo() {\n    addPoint.apply(void 0, arguments);\n    return ctx;\n  };\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return ctx;\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return getMax(points.map(function (p) {\n      return p[0];\n    }));\n  };\n\n  ctx.getHeight = function () {\n    return getMax(points.map(function (p) {\n      return p[1];\n    }));\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  return function () {\n    var imageMargin = (0, _getMargin.default)(node);\n    var pagePadding = (0, _getPadding.default)(page);\n    var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n    var ctx = measureCtx();\n    node.props.paint(ctx);\n    var width = ctx.getWidth();\n    var height = Math.min(pageArea, ctx.getHeight());\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n\nvar _default = measureCanvas;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}